),
fill = c(grDevices::colorRampPalette(RColorBrewer::brewer.pal(8, "Blues"))(25)[25],
grDevices::colorRampPalette(RColorBrewer::brewer.pal(8, "Blues"))(25)[12],
grDevices::colorRampPalette(RColorBrewer::brewer.pal(8, "Blues"))(25)[1]
),
bty = "n", cex = 0.6, xpd = T
)
on.exit(par(opar))
dev.off()
png('/hdd/yun master/MEE_manuscript/graphics/plots/Percent_loci_matched_by_sample.png',
width = 720, height = 720, units = "px", bg = 'transparent')
par(mar = c(5, 5, 4, 6))
heatmap(scale(top1loci, center = F), scale="column", Colv = NA, Rowv = NA,
main = 'Percent matched reads', xlab = 'Locus', ylab = 'Sample',
col= grDevices::colorRampPalette(RColorBrewer::brewer.pal(8, "Blues"))(25))
legend(x="bottomright", inset = c(-0.001, -0.30),
legend=c(paste0("Max: ", round(max(top1loci), 1), '%'),
paste0("Mean: ", round(mean(top1loci), 1), '%'),
paste0("Min: ", round(min(top1loci), 1), '%')
),
fill = c(grDevices::colorRampPalette(RColorBrewer::brewer.pal(8, "Blues"))(25)[25],
grDevices::colorRampPalette(RColorBrewer::brewer.pal(8, "Blues"))(25)[12],
grDevices::colorRampPalette(RColorBrewer::brewer.pal(8, "Blues"))(25)[1]
),
bty = "n", cex = 0.6, xpd = T
)
on.exit(par(opar))
dev.off()
png('/hdd/yun master/MEE_manuscript/graphics/plots/Percent_loci_matched_by_sample.png',
width = 720, height = 720, units = "px", bg = 'transparent')
par(mar = c(5, 5, 4, 6))
heatmap(scale(top1loci, center = F), scale="column", Colv = NA, Rowv = NA,
main = 'Percent matched reads', xlab = 'Locus', ylab = 'Sample',
col= grDevices::colorRampPalette(RColorBrewer::brewer.pal(8, "Blues"))(25))
legend(x="bottomright", inset = c(-0.001, -0.30),
legend=c(paste0("Max: ", round(max(top1loci), 1), '%'),
paste0("Mean: ", round(mean(top1loci), 1), '%'),
paste0("Min: ", round(min(top1loci), 1), '%')
),
fill = c(grDevices::colorRampPalette(RColorBrewer::brewer.pal(8, "Blues"))(25)[25],
grDevices::colorRampPalette(RColorBrewer::brewer.pal(8, "Blues"))(25)[12],
grDevices::colorRampPalette(RColorBrewer::brewer.pal(8, "Blues"))(25)[1]
),
bty = "n", cex = 0.6, xpd = T
)
on.exit(par(opar))
dev.off()
gc()
ecoregions <- sf::read_sf("../data/us_eco_l4/us_eco_l4_no_st.shp") %>%
dplyr::select(NA_L3CODE, NA_L3NAME) %>%
filter(NA_L3NAME == 'Southern Rockies') %>%
st_union() %>%
st_transform(5070) %>%
st_as_sf()
library(sf)
library(tigris)
library(tidyverse)
library(ggmap)
setwd('/home/reed/Documents/Analytical_Toolkit_SDM/scripts')
source('functions.R')
co <- c(left = -111, bottom = 34, right = -102, top = 44)
co_map <- get_stamenmap(co, zoom = 8, maptype = "terrain-background")
co_map <- ggmap_bbox(co_map)
states <- tigris::states()
places <- tigris::places(state = c('CO', 'NM', 'WY')) %>%
filter(NAME %in% c('Denver', 'Albuquerque', 'Rawlins', 'Grand Junction',
'Durango', 'Laramie', 'Lander'))
ecoregions <- st_transform(ecoregions, 3857)
ecoregions <- sf::read_sf("../data/us_eco_l4/us_eco_l4_no_st.shp") %>%
dplyr::select(NA_L3CODE, NA_L3NAME) %>%
filter(NA_L3NAME == 'Southern Rockies') %>%
st_union() %>%
st_transform(5070) %>%
st_as_sf()
st_write(ecoregions, "../data/us_eco_l4/us_eco_l4_no_st.shp", quiet = T)
st_write(ecoregions, "../data/us_eco_l4/us_eco_l4_no_st.shp", append = F)
ecoregions <- sf::read_sf("../data/us_eco_l4/us_eco_l4_no_st.shp") %>%
st_write(ecoregions, "../data/us_eco_l4/us_eco_l4_no_st.shp", append = F)
ecoregions <- sf::read_sf("../data/us_eco_l4/us_eco_l4_no_st.shp")
ggplot(ecoregions) +
geom_sf()
setwd('/home/reed/Documents/Analytical_Toolkit_SDM/scripts')
source('functions.R')
co <- c(left = -111, bottom = 34, right = -102, top = 44)
co_map <- get_stamenmap(co, zoom = 8, maptype = "terrain-background")
library(sf)
library(tigris)
library(tidyverse)
library(ggmap)
setwd('/home/reed/Documents/Analytical_Toolkit_SDM/scripts')
source('functions.R')
co <- c(left = -111, bottom = 34, right = -102, top = 44)
co_map <- get_stamenmap(co, zoom = 8, maptype = "terrain-background")
co_map <- ggmap_bbox(co_map)
states <- tigris::states()
places <- tigris::places(state = c('CO', 'NM', 'WY')) %>%
filter(NAME %in% c('Denver', 'Albuquerque', 'Rawlins', 'Grand Junction',
'Durango', 'Laramie', 'Lander'))
ecoregions <- sf::read_sf("../data/us_eco_l4/us_eco_l4_no_st.shp")
ecoregions <- st_transform(ecoregions, 3857)
ecoregion_bound <- st_transform(ecoregion_bound, 3857)
list.files(path = '..data')
list.files(path = '../data')
list.files(path = '../data', pattern = 'tif')
prediction <- terra(list.files(path = '../data', pattern = 'tif'))
library(terra)
prediction <- terra(list.files(path = '../data', pattern = 'tif'))
prediction <- rast(list.files(path = '../data', pattern = 'tif'))
# prediction surface
p2d <-'../data'
list.files(path = p2d, pattern = 'tif'))
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
r <- rast(ncols=10, nrows=10)
m <- rast(ncols=10, nrows=10)
values(r) <- 1:100
set.seed(1965)
x <- round(3 * runif(ncell(r)))
x
x[x==0] <- NA
x
v <- values(prediction)
v[v<50] <- NA
values(prediction) <- v
plot(prediction)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
v <- values(prediction)
v[v<50] <- NA
cr <- rast(prediction)
values(cr) <- v
plot(cr)
v
hist(v)
histogram(v)
hist(v)
max(v)
v[v<=50] <- NA
max(v)
v <- values(prediction)
max(v)
View(v)
v[v<=0.5] <- NA
max(v)
v <- values(prediction)
v[v<=0.5] <- NA
max(v)
View(v)
v <- values(prediction)
v[v<=0.5] <- NA
max(v)
v <- values(prediction)
max(v)
plot(prediction)
prediction <- aggregate(prediction, fact=10, fun=max)
plot(prediction)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
prediction <- aggregate(prediction, fact=10, fun=mean)
plot(prediction)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
prediction <- subst(prediction, 0:0.5, NA)
prediction <- aggregate(prediction, fact=10, fun=mean)
plot(prediction)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
prediction <- subst(prediction, 0:0.5, NA)
prediction <- aggregate(prediction, fact=10, fun=mean)
r <- rast(ncols=5, nrows=5, xmin=0, xmax=1, ymin=0, ymax=1, crs="")
r <- init(r, 1:6)
x <- subst(r, 3, 7)
x <- subst(r, 2:3, NA)
x <- subst(x, NA, 10)
plot)x
plot(x)
r <- rast(ncols=5, nrows=5, xmin=0, xmax=1, ymin=0, ymax=1, crs="")
r <- init(r, 1:6)
plot(r)
plot(x)
x <- subst(r, 3, 7)
plot(x)
plot(r)
plot(x)
x <- subst(r, 1:6, 7)
plot(x)
x <- subst(r, 1:5, 7)
plot(r)
plot(x)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
values(prediction) <- values(prediction) * 100
plot(prediction)
prediction <- subst(prediction, 0:50, NA)
plot(prediction)
x <- subst(r, 2:3, NA)
plot(x)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
values(prediction) <- values(prediction) * 100
prediction <- subst(prediction, 0:50, NA)
plot(prediction)
plot(prediction)
min(prediction)
m <- c(0, 0.5, NA,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0,
)
m <- c(0, 0.5, NA,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
)
m <- matrix( c(0, 0.5, NA,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
rc1 <- classify(prediction, m, include.lowest=TRUE)
plot(rc1)
min(prediction)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=10, fun=mean)
plot(prediction)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=10, fun=max)
plot(prediction)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
m <- matrix( c(
0.0, 0.1, NA,
0.1, 0.2, 0.2,
0.2, 0.3, 0.3,
0.3, 0.4, 0.4,
0.4, 0.5, 0.5,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=10, fun=max)
plot(prediction)
m <- matrix( c(
0.0, 0.5, NA,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=10, fun=max)
plot(prediction)
min(prediction)
vect(prediction)
p <- data.frame(prediction)
View(p)
prediction <- aggregate(prediction, fact=10, fun=max)
View(p)
colnames(p) <- 'suitability'
View(p)
View(p)
p <- terra::as.data.frame(prediction, xy = T)
View(p)
colnames(p) <- c('x', 'y', 'suitability')
View(p)
p <- terra::as.data.frame(prediction, xy = T)
colnames(p) <- c('x', 'y', 'suitability')
View(p)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=10, fun=max)
p <- terra::as.data.frame(prediction, xy = T)
View(p)
colnames(p) <- c('x', 'y', 'suitability')
crs(prediction)
st_as_sf(p, coords = c(x = x, y = y), crs = crs(prediction))
st_as_sf(p, coords = c(x = 'x', y = 'y'), crs = crs(prediction))
suitability <- st_as_sf(p, coords = c(x = 'x', y = 'y'), crs = crs(prediction))
ggplot()+
geom_sf(data = suitability)
ggplot()+
geom_sf(data = suitability, aes(fill = suitability))
ggplot()+
geom_sf(data = suitability, aes(color = suitability))
ggplot()+
geom_raster(data = suitability, aes(color = suitability))
m <- matrix( c(
0.0, 0.5, 0,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=10, fun=max)
p <- terra::as.data.frame(prediction, xy = T)
colnames(p) <- c('x', 'y', 'suitability')
suitability <- st_as_sf(p, coords = c(x = 'x', y = 'y'), crs = crs(prediction))
ggplot() +
geom_raster(data = suitability, aes(color = suitability))
ggplot() +
geom_raster(data = p, aes(color = suitability))
ggplot() +
geom_raster(data = p, aes(fill = suitability))
ggplot() +
geom_raster(data = p, aes(fill = suitability))
ggplot() +
geom_raster(data = p, aes(x, y, fill = suitability))
m <- matrix( c(
0.0, 0.5, NA,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
p <- terra::as.data.frame(prediction, xy = T)
colnames(p) <- c('x', 'y', 'suitability')
ggplot() +
geom_raster(data = p, aes(x, y, fill = suitability))
m <- matrix( c(
0.0, 0.5, NA,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=10, fun=max)
p <- terra::as.data.frame(prediction, xy = T)
colnames(p) <- c('x', 'y', 'suitability')
ggplot() +
geom_raster(data = p, aes(x, y, fill = suitability))
ggplot() +
geom_tile(data = p, aes(x, y, fill = suitability))
m <- matrix( c(
0.0, 0.4, NA,
0.4, 0.5, NA,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=10, fun=max)
p <- terra::as.data.frame(prediction, xy = T)
colnames(p) <- c('x', 'y', 'suitability')
ggplot() +
geom_tile(data = p, aes(x, y, fill = suitability))
m <- matrix( c(
0.0, 0.4, NA,
0.4, 0.5, 0.5,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=10, fun=max)
p <- terra::as.data.frame(prediction, xy = T)
colnames(p) <- c('x', 'y', 'suitability')
ggplot() +
geom_tile(data = p, aes(x, y, fill = suitability))
m <- matrix( c(
0.0, 0.4, NA,
0.4, 0.5, NA,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=5, fun=max)
p <- terra::as.data.frame(prediction, xy = T)
colnames(p) <- c('x', 'y', 'suitability')
suitability <- st_as_sf(p, coords = c(x = 'x', y = 'y'), crs = crs(prediction))
ggplot() +
geom_tile(data = p, aes(x, y, fill = suitability))
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
vect(ecoregion_bound)
ecoregion_bound <- st_convex_hull(ecoregions)
ecoregion_bound <- st_buffer(ecoregion_bound, dist = buffer_distance) %>%
st_transform(5070) %>%
st_as_sf()
setwd('/home/reed/Documents/Analytical_Toolkit_SDM/scripts')
source('functions.R')
co <- c(left = -111, bottom = 34, right = -102, top = 44)
co_map <- get_stamenmap(co, zoom = 8, maptype = "terrain-background")
co_map <- ggmap_bbox(co_map)
states <- tigris::states()
places <- tigris::places(state = c('CO', 'NM', 'WY')) %>%
filter(NAME %in% c('Denver', 'Albuquerque', 'Rawlins', 'Grand Junction',
'Durango', 'Laramie', 'Lander'))
ecoregions <- sf::read_sf("../data/us_eco_l4/us_eco_l4_no_st.shp")
ecoregions <- st_transform(ecoregions, 3857)
ecoregion_bound <- st_transform(ecoregion_bound, 3857)
states <- st_transform(states, 3857)
buffer_distance <- units::as_units(50, "kilometers") # want to buffer the edges...
ecoregion_bound <- st_convex_hull(ecoregions)
ecoregion_bound <- st_buffer(ecoregion_bound, dist = buffer_distance) %>%
st_transform(5070) %>%
st_as_sf()
vect(ecoregion_bound)
erb_spat <- vect(ecoregion_bound)
plot(prediction, add = T)
plot(erb_spat)
plot(erb_spat, add = T)
plot(prediction)
plot(prediction, add = T)
lines(erb_spat)
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = b.alp, inherit.aes = FALSE, color = '#4E2A84', size = 2) +
theme_void() +
labs(title = 'Occurrence records of Besseya alpina') +
theme(plot.title = element_text(hjust = 0.5))
b.alp <- st_read('../data/B.alpina_occ.shp')
b.alp <- st_transform(b.alp, 3857)
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = b.alp, inherit.aes = FALSE, color = '#4E2A84', size = 2) +
theme_void() +
labs(title = 'Occurrence records of Besseya alpina') +
theme(plot.title = element_text(hjust = 0.5))
b.alp_spat <- vect(b.alp)
plot(prediction, add = T)
lines(erb_spat)
points(b.alp_spat)
plot(prediction, add = T)
lines(erb_spat)
points(b.alp_spat)
dev.off()
plot(prediction, add = T)
plot(prediction, add = T)
b.alp_spat <- vect(b.alp)
plot(prediction, add = T)
dev.off()
plot(prediction, add = T)
plot(prediction)
lines(erb_spat, add = T)
points(b.alp_spat)
plot(prediction)
lines(erb_spat, add = T)
points(b.alp_spat, add = T)
plot(prediction)
lines(erb_spat, add = T)
plot(prediction, add = T)
#lines(erb_spat)
points(b.alp_spat)
plot(prediction, add = T)
#lines(erb_spat)
points(b.alp_spat)
plot(prediction, add = T)
plot(prediction, add = T)
gc()
