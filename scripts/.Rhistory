View(p)
colnames(p) <- c('x', 'y', 'suitability')
View(p)
p <- terra::as.data.frame(prediction, xy = T)
colnames(p) <- c('x', 'y', 'suitability')
View(p)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=10, fun=max)
p <- terra::as.data.frame(prediction, xy = T)
View(p)
colnames(p) <- c('x', 'y', 'suitability')
crs(prediction)
st_as_sf(p, coords = c(x = x, y = y), crs = crs(prediction))
st_as_sf(p, coords = c(x = 'x', y = 'y'), crs = crs(prediction))
suitability <- st_as_sf(p, coords = c(x = 'x', y = 'y'), crs = crs(prediction))
ggplot()+
geom_sf(data = suitability)
ggplot()+
geom_sf(data = suitability, aes(fill = suitability))
ggplot()+
geom_sf(data = suitability, aes(color = suitability))
ggplot()+
geom_raster(data = suitability, aes(color = suitability))
m <- matrix( c(
0.0, 0.5, 0,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=10, fun=max)
p <- terra::as.data.frame(prediction, xy = T)
colnames(p) <- c('x', 'y', 'suitability')
suitability <- st_as_sf(p, coords = c(x = 'x', y = 'y'), crs = crs(prediction))
ggplot() +
geom_raster(data = suitability, aes(color = suitability))
ggplot() +
geom_raster(data = p, aes(color = suitability))
ggplot() +
geom_raster(data = p, aes(fill = suitability))
ggplot() +
geom_raster(data = p, aes(fill = suitability))
ggplot() +
geom_raster(data = p, aes(x, y, fill = suitability))
m <- matrix( c(
0.0, 0.5, NA,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
p <- terra::as.data.frame(prediction, xy = T)
colnames(p) <- c('x', 'y', 'suitability')
ggplot() +
geom_raster(data = p, aes(x, y, fill = suitability))
m <- matrix( c(
0.0, 0.5, NA,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=10, fun=max)
p <- terra::as.data.frame(prediction, xy = T)
colnames(p) <- c('x', 'y', 'suitability')
ggplot() +
geom_raster(data = p, aes(x, y, fill = suitability))
ggplot() +
geom_tile(data = p, aes(x, y, fill = suitability))
m <- matrix( c(
0.0, 0.4, NA,
0.4, 0.5, NA,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=10, fun=max)
p <- terra::as.data.frame(prediction, xy = T)
colnames(p) <- c('x', 'y', 'suitability')
ggplot() +
geom_tile(data = p, aes(x, y, fill = suitability))
m <- matrix( c(
0.0, 0.4, NA,
0.4, 0.5, 0.5,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=10, fun=max)
p <- terra::as.data.frame(prediction, xy = T)
colnames(p) <- c('x', 'y', 'suitability')
ggplot() +
geom_tile(data = p, aes(x, y, fill = suitability))
m <- matrix( c(
0.0, 0.4, NA,
0.4, 0.5, NA,
0.5, 0.6, 0.6,
0.6, 0.7, 0.7,
0.6, 0.8, 0.8,
0.8, 0.9, 0.9,
0.9, 1.0, 1.0
), ncol = 3, byrow = T)
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
prediction <- classify(prediction, m, include.lowest=TRUE)
prediction <- aggregate(prediction, fact=5, fun=max)
p <- terra::as.data.frame(prediction, xy = T)
colnames(p) <- c('x', 'y', 'suitability')
suitability <- st_as_sf(p, coords = c(x = 'x', y = 'y'), crs = crs(prediction))
ggplot() +
geom_tile(data = p, aes(x, y, fill = suitability))
prediction <- rast(file.path(p2d,
list.files(path = p2d, pattern = 'tif')))
plot(prediction)
vect(ecoregion_bound)
ecoregion_bound <- st_convex_hull(ecoregions)
ecoregion_bound <- st_buffer(ecoregion_bound, dist = buffer_distance) %>%
st_transform(5070) %>%
st_as_sf()
setwd('/home/reed/Documents/Analytical_Toolkit_SDM/scripts')
source('functions.R')
co <- c(left = -111, bottom = 34, right = -102, top = 44)
co_map <- get_stamenmap(co, zoom = 8, maptype = "terrain-background")
co_map <- ggmap_bbox(co_map)
states <- tigris::states()
places <- tigris::places(state = c('CO', 'NM', 'WY')) %>%
filter(NAME %in% c('Denver', 'Albuquerque', 'Rawlins', 'Grand Junction',
'Durango', 'Laramie', 'Lander'))
ecoregions <- sf::read_sf("../data/us_eco_l4/us_eco_l4_no_st.shp")
ecoregions <- st_transform(ecoregions, 3857)
ecoregion_bound <- st_transform(ecoregion_bound, 3857)
states <- st_transform(states, 3857)
buffer_distance <- units::as_units(50, "kilometers") # want to buffer the edges...
ecoregion_bound <- st_convex_hull(ecoregions)
ecoregion_bound <- st_buffer(ecoregion_bound, dist = buffer_distance) %>%
st_transform(5070) %>%
st_as_sf()
vect(ecoregion_bound)
erb_spat <- vect(ecoregion_bound)
plot(prediction, add = T)
plot(erb_spat)
plot(erb_spat, add = T)
plot(prediction)
plot(prediction, add = T)
lines(erb_spat)
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = b.alp, inherit.aes = FALSE, color = '#4E2A84', size = 2) +
theme_void() +
labs(title = 'Occurrence records of Besseya alpina') +
theme(plot.title = element_text(hjust = 0.5))
b.alp <- st_read('../data/B.alpina_occ.shp')
b.alp <- st_transform(b.alp, 3857)
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = b.alp, inherit.aes = FALSE, color = '#4E2A84', size = 2) +
theme_void() +
labs(title = 'Occurrence records of Besseya alpina') +
theme(plot.title = element_text(hjust = 0.5))
b.alp_spat <- vect(b.alp)
plot(prediction, add = T)
lines(erb_spat)
points(b.alp_spat)
plot(prediction, add = T)
lines(erb_spat)
points(b.alp_spat)
dev.off()
plot(prediction, add = T)
plot(prediction, add = T)
b.alp_spat <- vect(b.alp)
plot(prediction, add = T)
dev.off()
plot(prediction, add = T)
plot(prediction)
lines(erb_spat, add = T)
points(b.alp_spat)
plot(prediction)
lines(erb_spat, add = T)
points(b.alp_spat, add = T)
plot(prediction)
lines(erb_spat, add = T)
plot(prediction, add = T)
#lines(erb_spat)
points(b.alp_spat)
plot(prediction, add = T)
#lines(erb_spat)
points(b.alp_spat)
plot(prediction, add = T)
plot(prediction, add = T)
gc()
![](../graphics/BIEN.png)[height=50%]
![](../graphics/BIEN.png){height=50%}
![](../graphics/BIEN.png){height=50%,weight=50%}
![](../graphics/BIEN.resized.png)
![](../graphics/BIEN.resized.png)
![](../graphics/BIEN.resized.png)
![](../graphics/BIEN.resized.png)
![](../graphics/terra.resized.png)
![American Basin](../graphics/American_Basin.jpg){width=75% height=75%}
library(sf)
library(tigris)
library(tidyverse)
library(ggmap)
library(terra)
source('functions.R')
setwd('/home/reed/Documents/Analytical_Toolkit_SDM/scripts')
setwd('/home/reed/Documents/Analytical_Toolkit_SDM/scripts')
getwd()
setwd('~/Documents/Analytical_Toolkit_SDM/scripts')
getwd()
b.alp <- st_read('../data/B.alpina_occ.shp')
b.alp <- st_transform(b.alp, 3857)
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = b.alp, inherit.aes = FALSE, color = '#4E2A84', size = 2) +
theme_void() +
labs(title = 'Occurrence records of Besseya alpina') +
theme(plot.title = element_text(hjust = 0.5))
co <- c(left = -111, bottom = 34, right = -102, top = 44)
co_map <- get_stamenmap(co, zoom = 8, maptype = "terrain-background")
co_map <- ggmap_bbox(co_map)
states <- tigris::states()
places <- tigris::places(state = c('CO', 'NM', 'WY')) %>%
filter(NAME %in% c('Denver', 'Albuquerque', 'Rawlins', 'Grand Junction',
'Durango', 'Laramie', 'Lander'))
ecoregions <- sf::read_sf("../data/us_eco_l4/us_eco_l4_no_st.shp")
ecoregions <- st_transform(ecoregions, 3857)
states <- st_transform(states, 3857)
buffer_distance <- units::as_units(50, "kilometers") # want to buffer the edges...
ecoregion_bound <- st_convex_hull(ecoregions)
ecoregion_bound <- st_buffer(ecoregion_bound, dist = buffer_distance) %>%
st_transform(5070) %>%
st_as_sf()
ecoregion_bound <- st_transform(ecoregion_bound, 3857)
st_sample(ecoregion_bound, n = 500)
absence <- st_sample(ecoregion_bound, size = 500)
View(absence)
absence <- st_sample(ecoregion_bound, size = 500) %>% st_as_sf()
absence <- st_sample(ecoregion_bound, size = 500) %>%
st_as_sf() %>%
names('geometry')
absence <- st_sample(ecoregion_bound, size = 500) %>%
st_as_sf() %>%
rename('geometry')
absence <- st_sample(ecoregion_bound, size = 500) %>%
st_as_sf() %>%
rename(geometry = 1)
absence <- st_sample(ecoregion_bound, size = 500) %>%
st_as_sf() %>%
rename(geometry = 1) %>%
mutate(Record = 'Absence')
View(absence)
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = b.alp, inherit.aes = FALSE, color = '#4E2A84', size = 2) +
theme_void() +
labs(title = 'Occurrence records of Besseya alpina') +
theme(plot.title = element_text(hjust = 0.5))
View(b.alp)
pa <- b.alp %>%
mutate(Record  = 'Presence') %>%
select(Record) %>%
bind_rows(absence, .)
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = pa, inherit.aes = FALSE, aes(color = Record))
absence <- st_sample(ecoregion_bound, size = 250) %>%
st_as_sf() %>%
rename(geometry = 1) %>%
mutate(Record = 'Absence')
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = pa, inherit.aes = FALSE, aes(color = Record))
absence <- st_sample(ecoregion_bound, size = nrow(b.alp)) %>%
st_as_sf() %>%
rename(geometry = 1) %>%
mutate(Record = 'Absence')
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = pa, inherit.aes = FALSE, aes(color = Record))
absence <- st_sample(ecoregion_bound, size = nrow(b.alp)) %>%
st_as_sf() %>%
rename(geometry = 1) %>%
mutate(Record = 'Absence')
pa <- b.alp %>%
mutate(Record  = 'Presence') %>%
select(Record) %>%
bind_rows(absence, .)
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = pa, inherit.aes = FALSE, aes(color = Record))
scale_color_manual(values = c("red", '#4E2A84')
ggmap(co_map) +
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = pa, inherit.aes = FALSE, aes(color = Record)) +
scale_color_manual(values = c("red", '#4E2A84'))
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = pa, inherit.aes = FALSE, aes(color = Record)) +
scale_color_manual(values = c("#ff805b", '#4E2A84'))
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = pa, inherit.aes = FALSE, aes(color = Record)) +
scale_color_manual(values = c("#7f1105", '#4E2A84'))
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = pa, inherit.aes = FALSE, aes(color = Record)) +
scale_color_manual(values = c("#7f1105", '#4E2A84')) +
theme_void() +
labs(title = 'Occurrence records of Besseya alpina') +
theme(plot.title = element_text(hjust = 0.5),
legend.position = 'bottom')
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = pa, inherit.aes = FALSE, aes(color = Record)) +
scale_color_manual(values = c("#7f1105", '#4E2A84')) +
theme_void() +
labs(title = 'records of Besseya alpina') +
theme(plot.title = element_text(hjust = 0.5),
legend.position = 'bottom')
png(filename = '../graphics/pseudo_abs.png', bg = 'transparent', width = 720, height = 720)
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = pa, inherit.aes = FALSE, aes(color = Record)) +
scale_color_manual(values = c("#7f1105", '#4E2A84')) +
theme_void() +
labs(title = 'records of Besseya alpina') +
theme(plot.title = element_text(hjust = 0.5),
legend.position = 'bottom')
dev.off()
![]('../graphics/FIA.png')
![](../graphics/FIA.png)
![](../graphics/FIA.png){width=25%}
![](../graphics/pseudo_abs.png)
png(filename = '../graphics/pseudo_abs.png', bg = 'transparent', width = 720, height = 720)
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = pa, inherit.aes = FALSE, aes(color = Record)) +
scale_color_manual(values = c("#7f1105", '#4E2A84')) +
theme_void() +
labs(title = 'records of Besseya alpina') +
theme(plot.title = element_text(hjust = 0.5),
text=element_text(size=21),
legend.position = 'bottom')
dev.off()
png(filename = '../graphics/besseya_occ.png', bg = 'transparent', width = 720, height = 720)
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = b.alp, inherit.aes = FALSE, color = '#4E2A84', size = 2) +
theme_void() +
labs(title = 'Occurrence records of Besseya alpina') +
theme(plot.title = element_text(hjust = 0.5),
text=element_text(size=24),)
dev.off()
png(filename = '../graphics/besseya_occ.png', bg = 'transparent', width = 720, height = 720)
ggmap(co_map) +
geom_sf(data = states, fill = NA, inherit.aes = FALSE, color = 'grey50') +
geom_sf(data = ecoregion_bound, alpha = 0.2, color = 'black', fill = NA, lwd = 2, inherit.aes = FALSE) +
geom_sf(data = ecoregions, fill = "darkslategray4", alpha = 0.5, inherit.aes = FALSE, color = 'darkslategray4') +
geom_sf_label(data = places, aes(label = NAME), inherit.aes = F,
alpha = 0.5, label.size  = NA) +
geom_sf(data = b.alp, inherit.aes = FALSE, color = '#4E2A84', size = 2) +
theme_void() +
labs(title = 'Occurrence records of Besseya alpina') +
theme(plot.title = element_text(hjust = 0.5),
text=element_text(size=24),)
dev.off()
100/80
100 / (80 + 20)
knitr::opts_chunk$set(echo = FALSE)
knitr::kable(read.csv(file.path('../data',
list.files(path = '../data', pattern = 'alpina_glm.*csv') ) )[,3:5]) |>
kableExtra::kable_styling("striped", full_width = FALSE) |>
kableExtra::column_spec(1:3, width = "5em")
?kable
knitr::kable(read.csv(file.path('../data',
list.files(path = '../data', pattern = 'alpina_glm.*csv') ),
col.names = c('Accuracy', 'Sensitivity', 'Specificitiy'))[,3:5]) |>
kableExtra::kable_styling("striped", full_width = FALSE) |>
kableExtra::column_spec(1:3, width = "5em")
knitr::kable(
read.csv(
file.path('../data', list.files(path = '../data', pattern = 'alpina_glm.*csv') ),)
col.names = c('Accuracy', 'Sensitivity', 'Specificity')[,3:5]) |>
knitr::kable(
read.csv(
file.path('../data', list.files(path = '../data', pattern = 'alpina_glm.*csv') ),
col.names = c('Accuracy', 'Sensitivity', 'Specificity'))[,3:5]) |>
kableExtra::kable_styling("striped", full_width = FALSE) |>
kableExtra::column_spec(1:3, width = "5em")
read.csv(
file.path('../data', list.files(path = '../data', pattern = 'alpina_glm.*csv')
knitr::kable(
knitr::kable(
read.csv(
file.path('../data', list.files(path = '../data', pattern = 'alpina_glm.*csv') )[,3:5],
col.names = c('Accuracy', 'Sensitivity', 'Specificity'))) |>
kableExtra::kable_styling("striped", full_width = FALSE) |>
kableExtra::column_spec(1:3, width = "5em")
knitr::kable(
read.csv(
file.path('../data', list.files(path = '../data', pattern = 'alpina_glm.*csv') )[,3:5],
col.names = c('Accuracy', 'Sensitivity', 'Specificity'))) |>
kableExtra::kable_styling("striped", full_width = FALSE) |>
kableExtra::column_spec(1:3, width = "5em")
knitr::kable(
read.csv(
file.path('../data', list.files(path = '../data', pattern = 'alpina_glm.*csv'))[,3:5],
col.names = c('Accuracy', 'Sensitivity', 'Specificity'))) |>
kableExtra::kable_styling("striped", full_width = FALSE) |>
kableExtra::column_spec(1:3, width = "5em")
file.path('../data', list.files(path = '../data', pattern = 'alpina_glm.*csv'))[,3:5]
t <- read.csv( file.path('../data', list.files(path = '../data', pattern = 'alpina_glm.*csv')))[,3:5]
knitr::kable(t,
col.names = c('Accuracy', 'Sensitivity', 'Specificity'))) |>
knitr::kable(t,
col.names = c('Accuracy', 'Sensitivity', 'Specificity')) |>
kableExtra::kable_styling("striped", full_width = FALSE) |>
kableExtra::column_spec(1:3, width = "5em")
gc()
